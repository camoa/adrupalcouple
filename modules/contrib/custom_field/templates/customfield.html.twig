{#
/**
 * @file
 * Default theme template for customfields.
 *
 * To override output, copy the "customfield.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--field-my-field-name.html.twig
 *
 * Available variables:
 * - items: An array of customfield items. Available keys are:
 *   - value: The customfield item value.
 *   - label: The customfield item label.
 *   - label_display: How to display the label.
 *   - type: The customfield item field type.
 *   - attributes: Attributes for the customfield item wrapper.
 * - attributes: HTML attributes for the containing element.
 * - field_name: The name of the field.
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
    'customfield',
    'field--name-' ~ field_name|clean_class,
  ]
%}
<div{{ attributes.addClass(classes) }}>
  {% for item in items %}
    {%
      set itemClasses = [
      'customfield__item',
      'field--name-' ~ item.name|clean_class,
      'field--type-' ~ item.type,
      'field--label-' ~ item.label_display,
    ]
    %}
    <div{{ item.attributes.addClass(itemClasses)}}>
      {% if item.label_display == 'above' or item.label_display == 'visually_hidden' %}
        <div class="field__label {{ (item.label_display == 'visually_hidden') ? ' visually-hidden' : '' }}">{{ item.label }}</div>
        <div class="field__item">{{ item.value }}</div>
      {% elseif item.label_display == 'inline' %}
        <span class="field__label">{{ item.label }}</span>
        <span class="field__item">{{ item.value }}</span>
      {% else %}
        <div class="field__item">{{ item.value }}</div>
      {% endif %}
    </div>
  {% endfor %}
</div>
