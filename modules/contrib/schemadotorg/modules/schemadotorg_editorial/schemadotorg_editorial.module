<?php

/**
 * @file
 * Adds an 'Editorial information' paragraph to the sidebar on node edit forms.
 */

declare(strict_types = 1);

use Drupal\Component\Utility\Random;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function schemadotorg_editorial_node_presave(NodeInterface $node): void {
  if (empty($node->devel_generate)
    || !$node->hasField('field_editorial')
    || empty($node->field_editorial->entity)
  ) {
    return;
  }
  // Limit editorial notes to one paragraph.
  if ($node->field_editorial->entity->hasField('field_editorial_notes')) {
    $random = new Random();
    $node->field_editorial->entity->field_editorial_notes->value = $random->paragraphs(1);
  }
  // Set editorial status to reasonable value.
  if ($node->field_editorial->entity->hasField('field_editorial_status')) {
    $statuses = [
      t('Needs info'),
      t('Needs review'),
      t('Changes pending'),
      t('Legal review'),
    ];
    $node->field_editorial->entity->field_editorial_status->value = $statuses[array_rand($statuses)];
  }
  // Clear editorial message to prevent it from displaying a warning on every
  // node edit form.
  if ($node->field_editorial->entity->hasField('field_editorial_message')) {
    $node->field_editorial->entity->field_editorial_message->value = '';
  }
}

/**
 * Implements hook_ENTITY_TYPE_prepare_form().
 */
function schemadotorg_editorial_node_prepare_form(NodeInterface $node, string $operation, FormStateInterface $form_state): void {
  // Only display message when the node edit for is loaded via a GET request.
  if (\Drupal::request()->getMethod() !== 'GET') {
    return;
  }

  // See if the node has am editorial paragraphs.
  if (!$node->hasField('field_editorial')
    || empty($node->field_editorial->entity)) {
    return;
  }

  /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
  $paragraph = $node->field_editorial->entity;

  // See if the paragraphs has an editorial message.
  if (!$paragraph->hasField('field_editorial_message')
    || empty($paragraph->field_editorial_message->value)) {
    return;
  }

  // Display the editorial message as a warning.
  \Drupal::messenger()->addWarning([
    '#type' => 'processed_text',
    '#text' => $paragraph->field_editorial_message->value,
    '#format' => $paragraph->field_editorial_message->format,
    '#langcode' => $paragraph->language()->getId(),
  ]);
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function schemadotorg_editorial_node_view_alter(array &$build, NodeInterface $node, EntityViewDisplayInterface $display): void {
  $field_name = 'field_editorial';
  if (empty($build[$field_name])
    || empty($build[$field_name][0])) {
    return;
  }

  /** @var \Drupal\Core\Render\Renderer $renderer */
  $renderer = \Drupal::service('renderer');

  // Render the editorial paragraph and determined if it has any content.
  $content = $build[$field_name][0];
  $output = (string) $renderer->renderPlain($content);
  if (trim(strip_tags($output)) === '') {
    $build[$field_name]['#access'] = FALSE;
  }
}
