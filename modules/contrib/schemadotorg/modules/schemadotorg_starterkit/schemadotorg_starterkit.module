<?php

/**
 * @file
 * Provides an API for starterkits to create Schema.org types.
 */

declare(strict_types = 1);

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function schemadotorg_starterkit_help(string $route_name, RouteMatchInterface $route_match): string|array|NULL {
  switch ($route_name) {
    case 'schemadotorg_starterkit.overview':
      return '<p>' . t('The <em>Schema.org starterkit</em> page lists all available Schema.org starterkits that can be installed and managed using the below admin UI or <a href=":href">Drush</a>.', [':href' => 'https://git.drupalcode.org/project/schemadotorg/-/blob/1.0.x/docs/DRUSH.md']) . '<p>';
  }

  return NULL;
}

/**
 * Implements hook_module_preinstall().
 */
function schemadotorg_starterkit_module_preinstall(string $module): void {
  if (\Drupal::isConfigSyncing()) {
    return;
  }

  /** @var \Drupal\schemadotorg_starterkit\SchemaDotOrgStarterkitManagerInterface $starterkit_manager */
  $starterkit_manager = \Drupal::service('schemadotorg_starterkit.manager');
  $starterkit_manager->preinstall($module);
}

/**
 * Implements hook_modules_installed().
 */
function schemadotorg_starterkit_modules_installed(array $modules, bool $is_syncing): void {
  if ($is_syncing) {
    return;
  }

  /** @var \Drupal\schemadotorg_starterkit\SchemaDotOrgStarterkitManagerInterface $starterkit_manager */
  $starterkit_manager = \Drupal::service('schemadotorg_starterkit.manager');
  $starterkit_manager->installed($modules);
}
